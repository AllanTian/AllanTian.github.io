# 就看你想查什么


## 范围查询

知名见意，就是查询某一范围间的数据（也可称 **区间查询**），接下来我们就来瞧瞧 MySQL 是如何查询呢！

## 演示数据库

在本教程中，我们将使用 db_students 样本数据库。

下面是选自 "db_students" 表的数据：


```java
+-----+--------+-----+------------+------+--------------+-----------------------+
| num | name   | age | birthday   | sex  | address      | major                 |
+-----+--------+-----+------------+------+--------------+-----------------------+
|   1 | 小明   |  15 | 01-01-1991 | 男   | 北大街       | 信息技术与技术        |
|   2 | 小张   |  17 | 05-05-1993 | 女   | 东大街       | 法学                  |
|   3 | 小李   |  20 | 13-04-1992 | 男   | 西大街       | 信息技术与技术        |
|   4 | 小红   |  21 | 05-09-1990 | 女   | 北大小街     | 管理学                |
|   5 | 小王   |  22 | 05-08-1996 | 男   | 南大街       | 金融学                |
|   6 | 小郭   |  19 | 21-10-1994 | 男   | 前大街       | 贸易经济学            |
|   7 | 小宋   |  20 | 17-08-1995 | 男   | 后大街       | 会计                  |
|   8 | 小昊   |  17 | 10-05-1997 | 女   | 下大街       | 计算机技术            |
|   9 | 小甜   |  18 | 26-04-2001 | 男   | 上大街       | java工程师            |
|  10 | 小丽   |  22 | 04-03-1993 | 女   | 右大街       | 数据库                |
|  11 | 小强   |  24 | 29-04-1998 | 女   | 左大街       | 体育                  |
|  12 | 小文   |  18 | 06-02-1993 | 女   | 西大小街     | 贸易经济学            |
|  13 | 小于   |  20 | 05-02-1994 | 男   | 东大小街     | 管理学                |
|  14 | 小胖   |  23 | 04-03-1997 | 男   | 南大小街     | 金融学                |
|  15 | 小阿   |  21 | 07-03-1998 | 女   | 上大小街     | 信息技术与技术        |
|  16 | 小白   |  19 | 09-08-1999 | 男   | 夏大街       | 法学                  |
|  17 | 小博   |  37 | 05-07-2000 | 女   | 龙大街       | 数据库                |
|  18 | 小燕   |  16 | 05-03-2001 | 女   | 田大街       | 体育                  |
|  19 | 小虎   |  21 | 03-01-2000 | 女   | 新大街       | 计算机技术            |
|  20 | 小丑   |  20 | 06-03-1994 | 男   | 旧大街       | 会计                  |
+-----+--------+-----+------------+------+--------------+-----------------------+
```




## IN 操作符  （指定条件某个范围查询）

MySQL 提供了 **IN** 操作符 ，它的作用是查询某个范围内的数据。

IN 常用于 WHERE 表达式中，IN 操作符允许您在 WHERE 子句中规定多个值。（值可以根据需求自己设定）

IN 操作符是可以使用索引的，in 操作的字段如果有索引速度会比较快



### MySQL  IN 语法

使用 IN 的基本语法格式如下：

```sql
 [NOT] IN (取值1,取值2,...) 
 
 #其中：
 #NOT：可选参数，表示指定条件的值。如果字段值不满足指定条件的值，则这些记录被返回。
 #取值1：表示条件值1。
 #取值2：表示条件值2。
```



```sql
 SELECT column_name(s)
 FROM table_name
 WHERE column_name IN (value1,value2,...);
 
 # value 值可传一个，也可传多个
```



### IN 操作符实例  

#### 实例one   （IN 后面是数字）

在表 *db_students* 中 *查询年龄在 20 和 22 的学生姓名和年龄*，SQL 语句和运行结果如下。


```sql
mysql> SELECT name,age FROM db_students
    -> WHERE age IN (20 , 22);
    
+--------+-----+
| name   | age |
+--------+-----+
| 小李   |  20 |
| 小王   |  22 |
| 小宋   |  20 |
| 小丽   |  22 |
| 小于   |  20 |
| 小丑   |  20 |
+--------+-----+

6 rows in set (0.01 sec)
```

查询结果中包含学生年龄为 20 和 22 的记录，这就说明，在 MySQL 中，IN 能匹配指定条件的所有值


#### 实例two  （IN 后面是字符串）

在表 *db_students* 中 *查询生日是 05-07-2000 和 29-04-1998的学生信息*，SQL 语句和运行结果如下。


```sql
mysql> SELECT * FROM db_students 
    -> WHERE birthday IN ('05-07-2000' , '29-04-1998');
    
+-----+--------+-----+------------+------+-----------+-----------+
| num | name   | age | birthday   | sex  | address   | major     |
+-----+--------+-----+------------+------+-----------+-----------+
|  11 | 小强   |  24 | 29-04-1998 | 女   | 左大街    | 体育      |
|  17 | 小博   |  37 | 05-07-2000 | 女   | 龙大街    | 数据库    |
+-----+--------+-----+------------+------+-----------+-----------+

2 rows in set (0.00 sec)
```

查询结果中包含学生生日是 05-07-2000 和 29-04-1998的学生所有信息记录，这就说明，在 MySQL 中，IN 能匹配指定条件的所有值

⚠️**注意**：当匹配的条件值为字符串， 这里一定要将字符串用单引号 **' '** 标注起来

### NOT IN 操作符实例

#### 实例   （NOT IN 后面是数字）

在表 *db_students* 中 *查询年龄不在 20 和 22 的学生姓名和年龄*，SQL 语句和运行结果如下。


```sql
mysql> SELECT name,age FROM db_students
    -> WHERE age NOT IN (20 , 22);
    
+--------+-----+
| name   | age |
+--------+-----+
| 小明   |  15 |
| 小张   |  17 |
| 小红   |  21 |
| 小郭   |  19 |
| 小昊   |  17 |
| 小甜   |  18 |
| 小强   |  24 |
| 小文   |  18 |
| 小胖   |  23 |
| 小阿   |  21 |
| 小白   |  19 |
| 小博   |  37 |
| 小燕   |  16 |
| 小虎   |  21 |
+--------+-----+

14 rows in set (0.00 sec)

```

查询结果中是所有学生中不包含学生年龄为 20 和 22 的记录，这就说明，在 MySQL 中，NOT IN 能匹配不包含指定条件的所有值



## BETWEEN AND 操作符   （指定条件范围内查询）


MySQL 提供了 **BETWEEN AND** 操作符，用来判断字段的数值是否在指定范围内。

*BETWEEN AND* 需要**两个**参数，即*范围的起始值和终止值*。如果字段值在指定的范围内，则这些记录被返回。如果不在指定范围内，则不会被返回。


### MySQL  BETWEEN AND 语法

使用 BETWEEN AND 的基本语法格式如下：


```sql
[NOT] BETWEEN 取值1 AND 取值2

#其中：
#NOT：可选参数，表示指定范围之外的值。如果字段值不满足指定范围内的值，则这些记录#被返回。
#取值1：表示范围的起始值。
#取值2：表示范围的终止值。
```



*BETWEEN AND* 和 *NOT BETWEEN AND* 关键字在查询指定范围内的记录时很有用。例如，查询学生的年龄段、出生日期，员工的工资水平等。

### BETWEEN AND 操作符实例

#### 实例one   （BETWEEN AND 后面是数字）

在表 *db_students* 中查询*年龄在 20 到 23 之间的学生姓名和年龄*，SQL 语句和运行结果如下。



```sql
mysql> SELECT name,age FROM db_students 
    -> WHERE age BETWEEN 20 AND 23;
    
+--------+-----+
| name   | age |
+--------+-----+
| 小李   |  20 |
| 小红   |  21 |
| 小王   |  22 |
| 小宋   |  20 |
| 小丽   |  22 |
| 小于   |  20 |
| 小胖   |  23 |
| 小阿   |  21 |
| 小虎   |  21 |
| 小丑   |  20 |
+--------+-----+

10 rows in set (0.01 sec)
```

查询结果中包含学生年龄为 20 到 23 的所有记录，这就说明，在 MySQL 中，BETWEEN AND 能匹配指定范围内的所有值，**包括**起始值和终止值。




#### 实例two   （BETWEEN AND 后面是字符串）


在表 *db_students* 中 *查询生日在 05-07-2000 到 29-04-1998的学生信息*，SQL 语句和运行结果如下。



```sql
mysql> SELECT * FROM db_students
    -> WHERE birthday BETWEEN '05-07-2000' AND '29-04-1998' ;
    
+-----+--------+-----+------------+------+--------------+-----------------------+
| num | name   | age | birthday   | sex  | address      | major                 |
+-----+--------+-----+------------+------+--------------+-----------------------+
|   3 | 小李   |  20 | 13-04-1992 | 男   | 西大街       | 信息技术与技术        |
|   4 | 小红   |  21 | 05-09-1990 | 女   | 北大小街     | 管理学                |
|   5 | 小王   |  22 | 05-08-1996 | 男   | 南大街       | 金融学                |
|   6 | 小郭   |  19 | 21-10-1994 | 男   | 前大街       | 贸易经济学            |
|   7 | 小宋   |  20 | 17-08-1995 | 男   | 后大街       | 会计                  |
|   8 | 小昊   |  17 | 10-05-1997 | 女   | 下大街       | 计算机技术            |
|   9 | 小甜   |  18 | 26-04-2001 | 男   | 上大街       | java工程师            |
|  11 | 小强   |  24 | 29-04-1998 | 女   | 左大街       | 体育                  |
|  12 | 小文   |  18 | 06-02-1993 | 女   | 西大小街     | 贸易经济学            |
|  15 | 小阿   |  21 | 07-03-1998 | 女   | 上大小街     | 信息技术与技术        |
|  16 | 小白   |  19 | 09-08-1999 | 男   | 夏大街       | 法学                  |
|  17 | 小博   |  37 | 05-07-2000 | 女   | 龙大街       | 数据库                |
|  20 | 小丑   |  20 | 06-03-1994 | 男   | 旧大街       | 会计                  |
+-----+--------+-----+------------+------+--------------+-----------------------+

13 rows in set (0.00 sec)

```

查询结果中包含学生学生生日在 05-07-2000 到 29-04-1998 的学生所有信息记录，这就说明，在 MySQL 中，BETWEEN AND 能匹配指定范围内的所有值，包括起始值和终止值。

⚠️**同样注意**：当匹配的起始值和终止值为字符串， 这里一定要将字符串用单引号 **' '** 标注起来

### NOT BETWEEN AND 操作符实例

#### 实例  （NOT BETWEEN AND 后面是数字）



在表 *db_students* 中查询*年龄**不**在 20 到 23 之间的学生姓名和年龄*，SQL 语句和运行结果如下。



```sql
mysql> SELECT name,age FROM db_students 
    -> WHERE age NOT BETWEEN 20 AND 23;
    
+--------+-----+
| name   | age |
+--------+-----+
| 小明   |  15 |
| 小张   |  17 |
| 小郭   |  19 |
| 小昊   |  17 |
| 小甜   |  18 |
| 小强   |  24 |
| 小文   |  18 |
| 小白   |  19 |
| 小博   |  37 |
| 小燕   |  16 |
+--------+-----+

10 rows in set (0.00 sec)
```

查询结果中包含学生年龄为不在 20 到 23 范围内之外的所有记录，这就说明，在 MySQL 中，BETWEEN AND 能匹配不在指定范围内的所有值，**不包括**起始值和终止值。


## 总结

看了以上文章，你还在愁你的需求无法实现嘛，想查什么就查什么，想查那个范围的数据就查那个范围，包括，不包括，全都通通不在话下。是不是很nice，加油，还有更多的秘密等着你来探索！

分享，在看点起来，美德传起来，点个星标从此探索之路不迷茫！