I"T<p>昨天早上通过远程的方式 review 了两名新来同事的代码，大部分代码都写得很漂亮，严谨的同时注释也很到位，这令我非常满意。但当我看到他们当中有一个人写的 switch 语句时，还是忍不住破口大骂：“我擦，小王，你丫写的 switch 语句也太老土了吧！”</p>

<!--more-->

<p><img src="http://www.itwanger.com/assets/images/2020/03/java-switch-01.png" alt="" /></p>

<p>来看看小王写的代码吧，看完不要骂我装逼啊。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">createPlayer</span><span class="o">(</span><span class="nc">PlayerTypes</span> <span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">switch</span> <span class="o">(</span><span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">case</span> <span class="nl">TENNIS:</span>
            <span class="k">return</span> <span class="s">"网球运动员费德勒"</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">FOOTBALL:</span>
            <span class="k">return</span> <span class="s">"足球运动员C罗"</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">BASKETBALL:</span>
            <span class="k">return</span> <span class="s">"篮球运动员詹姆斯"</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">UNKNOWN:</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">"未知"</span><span class="o">);</span>
        <span class="k">default</span><span class="o">:</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span>
                    <span class="s">"运动员类型: "</span> <span class="o">+</span> <span class="n">playerType</span><span class="o">);</span>

    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>看完上述代码后，你是不是会发出这样的感慨——“代码写得很好，没有任何问题啊！”是不是觉得我在无事生非，错怪了小王！但此时我要送上《了不起的盖茨比》中的一句话：</p>

<blockquote>
  <p>我年纪还轻，阅历不深的时候，我父亲教导过我一句话，我至今还念念不忘。 “每逢你想要批评任何人的时候， ”他对我说，“你就记住，这个世界上所有的人，并不是个个都有过你拥有的那些优越条件。”</p>
</blockquote>

<p>哈哈，这句话不光是让你看的，也是给我看的。是时候冷静下来谈谈上述 switch 语句的老土问题了。</p>

<p><img src="http://www.itwanger.com/assets/images/2020/03/java-switch-02.png" alt="" /></p>

<p>看到上图了吧，当不小心删掉 default 语句后，编译器就会报错，提示：“没有返回语句”，为了解决这个问题，我们可以新建一个 player 变量作为返回结果，就像下面这样：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">createPlayer</span><span class="o">(</span><span class="nc">PlayerTypes</span> <span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">player</span> <span class="o">=</span> <span class="kc">null</span><span class="o">;</span>
    <span class="k">switch</span> <span class="o">(</span><span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">case</span> <span class="nl">TENNIS:</span>
            <span class="n">player</span> <span class="o">=</span> <span class="s">"网球运动员费德勒"</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">FOOTBALL:</span>
            <span class="n">player</span> <span class="o">=</span> <span class="s">"足球运动员C罗"</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">BASKETBALL:</span>
            <span class="n">player</span> <span class="o">=</span> <span class="s">"篮球运动员詹姆斯"</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">UNKNOWN:</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">"未知"</span><span class="o">);</span>
    <span class="o">}</span>

    <span class="k">return</span> <span class="n">player</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p>当添加了 player 变量后，case 语句中就需要添加上 break 关键字；另外在 switch 语句结束后，返回 player。这时候，编译器并不会提示任何错误，说明 default 语句在这种情况下是可以省略的。</p>

<p>从 JDK 12 开始（本例使用的是 JDK 13），switch 语句升级了，不仅可以像传统的 switch 语句那样作为条件的判断，还可以直接作为一个返回结果。来对小王的代码进行改造，如下所示：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">createPlayer</span><span class="o">(</span><span class="nc">PlayerTypes</span> <span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
   <span class="k">return</span> <span class="nf">switch</span> <span class="o">(</span><span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">case</span> <span class="no">TENNIS</span> <span class="o">-&gt;</span> <span class="s">"网球运动员费德勒"</span><span class="o">;</span>
        <span class="k">case</span> <span class="no">FOOTBALL</span> <span class="o">-&gt;</span> <span class="s">"足球运动员C罗"</span><span class="o">;</span>
        <span class="k">case</span> <span class="no">BASKETBALL</span> <span class="o">-&gt;</span> <span class="s">"篮球运动员詹姆斯"</span><span class="o">;</span>
        <span class="k">case</span> <span class="no">UNKNOWN</span> <span class="o">-&gt;</span>  <span class="k">throw</span> <span class="k">new</span> <span class="nc">IllegalArgumentException</span><span class="o">(</span><span class="s">"未知"</span><span class="o">);</span>
    <span class="o">};</span>
<span class="o">}</span>
</code></pre></div></div>

<p>够 fashion 吧？不仅 switch 关键字之前加了 return 关键字，case 中还见到了 <a href="https://mp.weixin.qq.com/s/ozr0jYHIc12WSTmmd_vEjw">Lambda 表达式</a>的影子，中划线和箭头替代了冒号，意味着箭头右侧的代码只管执行无须 break。</p>

<p><img src="http://www.itwanger.com/assets/images/2020/03/java-switch-03.png" alt="" /></p>

<p>并且，default 语句变成了可选项，可有可无，不信？你也动手试试。</p>

<p>新的 switch 语句足够的智能化，除了有上述的 3 个优势，还可以对枚举类型的条件进行校验。假如在 PlayerTypes 中增加了新的类型 PINGPANG（乒乓球）：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">enum</span> <span class="nc">PlayerTypes</span> <span class="o">{</span>
    <span class="no">TENNIS</span><span class="o">,</span>
    <span class="no">FOOTBALL</span><span class="o">,</span>
    <span class="no">BASKETBALL</span><span class="o">,</span>
    <span class="no">PINGPANG</span><span class="o">,</span>
    <span class="no">UNKNOWN</span>
<span class="o">}</span>
</code></pre></div></div>

<p>此时编译器会发出以下警告：</p>

<p><img src="http://www.itwanger.com/assets/images/2020/03/java-switch-04.png" alt="" /></p>

<p>意思就是 switch 中的 case 条件没有完全覆盖枚举中可能存在的值。好吧，那就把 PINGPANG 的条件加上吧。来看一下完整的代码：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">OldSwitchDemo</span> <span class="o">{</span>
    <span class="kd">public</span> <span class="kd">enum</span> <span class="nc">PlayerTypes</span> <span class="o">{</span>
        <span class="no">TENNIS</span><span class="o">,</span>
        <span class="no">FOOTBALL</span><span class="o">,</span>
        <span class="no">BASKETBALL</span><span class="o">,</span>
        <span class="no">PINGPANG</span><span class="o">,</span>
        <span class="no">UNKNOWN</span>
    <span class="o">}</span>

    <span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">createPlayer</span><span class="o">(</span><span class="nc">PlayerTypes</span><span class="o">.</span><span class="na">BASKETBALL</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">createPlayer</span><span class="o">(</span><span class="nc">PlayerTypes</span> <span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nf">switch</span> <span class="o">(</span><span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
            <span class="k">case</span> <span class="no">TENNIS</span> <span class="o">-&gt;</span> <span class="s">"网球运动员费德勒"</span><span class="o">;</span>
            <span class="k">case</span> <span class="no">FOOTBALL</span> <span class="o">-&gt;</span> <span class="s">"足球运动员C罗"</span><span class="o">;</span>
            <span class="k">case</span> <span class="no">BASKETBALL</span> <span class="o">-&gt;</span> <span class="s">"篮球运动员詹姆斯"</span><span class="o">;</span>
            <span class="k">case</span> <span class="no">PINGPANG</span> <span class="o">-&gt;</span> <span class="s">"乒乓球运动员马龙"</span><span class="o">;</span>
            <span class="k">case</span> <span class="no">UNKNOWN</span> <span class="o">-&gt;</span> <span class="k">throw</span> <span class="k">new</span> <span class="nc">IllegalArgumentException</span><span class="o">(</span><span class="s">"未知"</span><span class="o">);</span>
        <span class="o">};</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>switch 语句变成了强大的 switch 表达式，美滋滋啊！那假如一个运动员既会打篮球又会打乒乓球呢？</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">createPlayer</span><span class="o">(</span><span class="nc">PlayerTypes</span> <span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nf">switch</span> <span class="o">(</span><span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">case</span> <span class="no">TENNIS</span> <span class="o">-&gt;</span> <span class="s">"网球运动员费德勒"</span><span class="o">;</span>
        <span class="k">case</span> <span class="no">FOOTBALL</span> <span class="o">-&gt;</span> <span class="s">"足球运动员C罗"</span><span class="o">;</span>
        <span class="k">case</span> <span class="no">BASKETBALL</span><span class="o">,</span><span class="no">PINGPANG</span> <span class="o">-&gt;</span> <span class="s">"牛逼运动员沉默王二"</span><span class="o">;</span>
        <span class="k">case</span> <span class="no">UNKNOWN</span> <span class="o">-&gt;</span> <span class="k">throw</span> <span class="k">new</span> <span class="nc">IllegalArgumentException</span><span class="o">(</span><span class="s">"未知"</span><span class="o">);</span>
    <span class="o">};</span>
<span class="o">}</span>
</code></pre></div></div>

<p>就像上述代码那样，使用英文逗号“,”把条件分割开就行了，666 啊！</p>

<p><img src="http://www.itwanger.com/assets/images/2020/03/java-switch-05.png" alt="" /></p>

<p>不服气？switch 表达式还有更厉害的，<code class="highlighter-rouge">-&gt;</code> 右侧还可以是 <code class="highlighter-rouge">{}</code> 括起来的代码块，就像 Lambda 表达式那样。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">createPlayer</span><span class="o">(</span><span class="nc">PlayerTypes</span> <span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
    <span class="k">return</span> <span class="nf">switch</span> <span class="o">(</span><span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">case</span> <span class="no">TENNIS</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"网球"</span><span class="o">);</span>
            <span class="n">yield</span> <span class="s">"网球运动员费德勒"</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">case</span> <span class="no">FOOTBALL</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"足球"</span><span class="o">);</span>
            <span class="n">yield</span> <span class="s">"足球运动员C罗"</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">case</span> <span class="no">BASKETBALL</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"篮球"</span><span class="o">);</span>
            <span class="n">yield</span> <span class="s">"篮球运动员詹姆斯"</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">case</span> <span class="no">PINGPANG</span> <span class="o">-&gt;</span> <span class="o">{</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"乒乓球"</span><span class="o">);</span>
            <span class="n">yield</span> <span class="s">"乒乓球运动员马龙"</span><span class="o">;</span>
        <span class="o">}</span>
        <span class="k">case</span> <span class="no">UNKNOWN</span> <span class="o">-&gt;</span> <span class="k">throw</span> <span class="k">new</span> <span class="nc">IllegalArgumentException</span><span class="o">(</span><span class="s">"未知"</span><span class="o">);</span>
    <span class="o">};</span>
<span class="o">}</span>
</code></pre></div></div>

<p>细心的同学会发现一个之前素未谋面的关键字 <code class="highlighter-rouge">yield</code>，它和传统的 return、break 有什么区别呢？</p>

<p>先来看官方的解释：</p>

<blockquote>
  <p>A yield statement transfers control by causing an enclosing switch expression to produce a specified value.</p>
</blockquote>

<p>意思就是说 yield 语句通过使一个封闭的 switch 表达式产生一个指定值来转移控制权。为了进一步地了解 <code class="highlighter-rouge">yield</code> 关键字，我们可以反编译一下字节码：</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">private</span> <span class="kd">static</span> <span class="nc">String</span> <span class="nf">createPlayer</span><span class="o">(</span><span class="nc">NewSwitchDemo3</span><span class="o">.</span><span class="na">PlayerTypes</span> <span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
    <span class="nc">String</span> <span class="n">var10000</span><span class="o">;</span>
    <span class="k">switch</span><span class="o">(</span><span class="n">playerType</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">case</span> <span class="nl">TENNIS:</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"网球"</span><span class="o">);</span>
            <span class="n">var10000</span> <span class="o">=</span> <span class="s">"网球运动员费德勒"</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">FOOTBALL:</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"足球"</span><span class="o">);</span>
            <span class="n">var10000</span> <span class="o">=</span> <span class="s">"足球运动员C罗"</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">BASKETBALL:</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"篮球"</span><span class="o">);</span>
            <span class="n">var10000</span> <span class="o">=</span> <span class="s">"篮球运动员詹姆斯"</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">PINGPANG:</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"乒乓球"</span><span class="o">);</span>
            <span class="n">var10000</span> <span class="o">=</span> <span class="s">"乒乓球运动员马龙"</span><span class="o">;</span>
            <span class="k">break</span><span class="o">;</span>
        <span class="k">case</span> <span class="nl">UNKNOWN:</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IllegalArgumentException</span><span class="o">(</span><span class="s">"未知"</span><span class="o">);</span>
        <span class="k">default</span><span class="o">:</span>
            <span class="k">throw</span> <span class="k">new</span> <span class="nf">IncompatibleClassChangeError</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="k">return</span> <span class="n">var10000</span><span class="o">;</span>
<span class="o">}</span>
</code></pre></div></div>

<p>编译器在生成字节码的时候对 <code class="highlighter-rouge">yield</code> 关键字做了自动化转义，转成了传统的 break 语句。这下清楚了吧？</p>

<p><img src="http://www.itwanger.com/assets/images/2020/03/java-switch-06.gif" alt="" /></p>

<p>但是，话又说出来，那些看似 fashion 的代码也不过是把部分秀技的工作交给了编译器，还可能存在对旧版本不兼容、对队友不友好的问题——代码土点就土点呗，没准是最实用的。</p>

<blockquote>
  <p>“不好意思，我为昨天早上的嚣张向你道歉。。。。。。”我向小王发送了一条信息。</p>
</blockquote>

<p>好了，我亲爱的读者朋友，以上就是本文的全部内容了，希望能够博得你的欢心。对了，我还有一个小小的请求：原创不易，如果觉得有点用的话，请不要吝啬你手中<strong>点赞</strong>的权力——因为这将是我写作的最强动力。</p>

<p><img src="http://www.itwanger.com/assets/images/cmower_4.png" alt="" /></p>

:ET