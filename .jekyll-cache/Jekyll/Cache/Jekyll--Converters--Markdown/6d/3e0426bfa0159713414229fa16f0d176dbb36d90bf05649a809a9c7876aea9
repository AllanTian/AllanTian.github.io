I"u <h3 id="01jad-是什么">01、JAD 是什么</h3>

<p>JAD 是一款老牌的、经典的、能够让你了解 Java 编译器真实工作原理的 Java 反编译工具。大家都知道，将源代码转换成二进制执行代码的过程叫“编译”，比如将 Java 源代码编译成 .class 字节码文件；那么把字节码文件转换成代码的过程就叫“反编译”。</p>

<!--more-->

<p>JAD 镜像下载的官网是 <a href="https://varaneckas.com/jad/">https://varaneckas.com/jad/</a></p>

<p>如果镜像的链接地址失效了，可微信搜索「沉默王二」公众号，关注后回复关键字「jad」即可下载（Windows版+OSX版）。</p>

<h3 id="02jad-的环境变量配置">02、JAD 的环境变量配置</h3>
<p>下载好 JAD 并解压后（镜像），你将看到：</p>

<ul>
  <li>jad.exe （无法直接运行）</li>
  <li>Readme.txt （使用说明）</li>
</ul>

<p>为了更便捷的使用 jad，我们可以将其加入到环境变量中。</p>

<p>新建 JAD_HOME 环境变量。</p>

<p><img src="http://www.itwanger.com/assets/images/2019/10/java-jad-1.png" alt="" /></p>

<p>加入到系统 PATH 变量中。</p>

<p><img src="http://www.itwanger.com/assets/images/2019/10/java-jad-2.png" alt="" /></p>

<h3 id="03jad-的使用方法">03、JAD 的使用方法</h3>

<p>假如有这样一段代码。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.cmower.java_demo.fourteen</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Cmower3</span> <span class="o">{</span>

<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span><span class="o">[]</span> <span class="n">args</span><span class="o">)</span> <span class="o">{</span>
<span class="nc">String</span> <span class="n">cmowers</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="k">for</span> <span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span> <span class="o">{</span>
<span class="n">cmowers</span> <span class="o">+=</span> <span class="s">"沉默王二"</span><span class="o">;</span>
<span class="o">}</span>
<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">cmowers</span><span class="o">);</span>
<span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p>保存后的文件名为 Cmower3.java。</p>

<p>打开 CMD，进入该文件所在的路径（如果之前未编译，请先使用 javac 进行编译，生成 class 文件），输入以下命令：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jad Cmower3.class
</code></pre></div></div>

<p>如果提示信息如下，则证明反编译成功。</p>

<pre><code class="language-cmd">Parsing Cmower3.class... Generating Cmower3.jad
</code></pre>

<p>与此同时，Cmower3.class 所在的文件夹下会多出来一个新的文件 Cmower3.jad，用文本编辑器打开即可查看。</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Decompiled by Jad v1.5.8g. Copyright 2001 Pavel Kouznetsov.</span>
<span class="c1">// Jad home page: http://www.kpdus.com/jad.html</span>
<span class="c1">// Decompiler options: packimports(3)</span>
<span class="c1">// Source File Name:   Cmower3.java</span>

<span class="kn">package</span> <span class="nn">com.cmower.java_demo.fourteen</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.io.PrintStream</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Cmower3</span>
<span class="o">{</span>

<span class="kd">public</span> <span class="nf">Cmower3</span><span class="o">()</span>
<span class="o">{</span>
<span class="o">}</span>

<span class="kd">public</span> <span class="kd">static</span> <span class="kt">void</span> <span class="nf">main</span><span class="o">(</span><span class="nc">String</span> <span class="n">args</span><span class="o">[])</span>
<span class="o">{</span>
<span class="nc">String</span> <span class="n">s</span> <span class="o">=</span> <span class="s">""</span><span class="o">;</span>
<span class="k">for</span><span class="o">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="o">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="mi">10</span><span class="o">;</span> <span class="n">i</span><span class="o">++)</span>
<span class="n">s</span> <span class="o">=</span> <span class="o">(</span><span class="k">new</span> <span class="nc">StringBuilder</span><span class="o">()).</span><span class="na">append</span><span class="o">(</span><span class="n">s</span><span class="o">).</span><span class="na">append</span><span class="o">(</span><span class="s">"\u5A0C\u5910\u7CAF\u941C\u5B29\u7C29"</span><span class="o">).</span><span class="na">toString</span><span class="o">();</span>

<span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
<span class="o">}</span>
<span class="o">}</span>

</code></pre></div></div>

<h3 id="04和-jd-gui-的不同之处">04、和 JD-GUI 的不同之处</h3>

<p>需要注意的是：JAD 不是 JD-GUI，两者都是反编译工具，但并不相同。</p>

<p>比如上面这段代码，JD-GUI 反编译后的结果如下所示：</p>

<p><img src="http://www.itwanger.com/assets/images/2019/10/java-jad-3.png" alt="" /></p>

<p>可以看得出来，JD-GUI 显示的是最原始的 Java 源代码。而 JAD 显示的是更贴近事实的源代码：+ 号操作符在编译的时候其实是会转成 StringBuilder 的。</p>

<p>这特别的关键，如果你想知道编译器的工作内容，就可以使用 JAD。就像 javap 一样，只不过更加的清晰明了，javap 一般人看不太懂，如下：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>D:\program\java.git\java_demo\src\main\java\com\cmower\java_demo\fourteen&gt;javap -c Cmower3
警告: 二进制文件Cmower3包含com.cmower.java_demo.fourteen.Cmower3
Compiled from "Cmower3.java"
public class com.cmower.java_demo.fourteen.Cmower3 {
public com.cmower.java_demo.fourteen.Cmower3();
Code:
0: aload_0
1: invokespecial #1                  // Method java/lang/Object."&lt;init&gt;":()V
4: return

public static void main(java.lang.String[]);
Code:
0: ldc           #2                  // String
2: astore_1
3: iconst_0
4: istore_2
5: iload_2
6: bipush        10
8: if_icmpge     37
11: new           #3                  // class java/lang/StringBuilder
14: dup
15: invokespecial #4                  // Method java/lang/StringBuilder."&lt;init&gt;":()V
18: aload_1
19: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
22: ldc           #6                  // String 娌夐粯鐜嬩簩
24: invokevirtual #5                  // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
27: invokevirtual #7                  // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
30: astore_1
31: iinc          2, 1
34: goto          5
37: getstatic     #8                  // Field java/lang/System.out:Ljava/io/PrintStream;
40: aload_1
41: invokevirtual #9                  // Method java/io/PrintStream.println:(Ljava/lang/String;)V
44: return
}
</code></pre></div></div>

<p>原文链接：<a href="http://www.itwanger.com/java/2019/10/22/javac-jad.html">http://www.itwanger.com/java/2019/10/22/javac-jad.html</a></p>

:ET