I"Y<h3 id="01前言">01、前言</h3>
<p>Emoji 在我们生活中真的是越来越常见了，几乎每次发消息的时候不带个 Emoji，总觉得少了点什么，似乎干巴巴的文字已经无法承载我们丰富的感情了。对于我们开发者来说，如何将 Emoji 存入 MySql 数据库或者取出来，就变成了一种必须掌握的技能了。</p>

<!--more-->

<p>Emoji 是一种图形符号，能够很直观地反应出某种文字含义。它让我想起远古时代的象形文字。</p>

<p><img src="http://www.itwanger.com/assets/images/2019/10/mysql-emoji-1.png" alt="" /></p>

<p>Emoji 其实是一个日语词（えもじ），<code class="highlighter-rouge">E</code> 表示”絵”，<code class="highlighter-rouge">moji</code> 表示”文字”；连在一起就是”絵文字”，可以更形象化地表情达意。</p>

<h3 id="02糟糕">02、糟糕</h3>

<p>如果我们直接将 Emoji 表情存入数据库的话，通常会出现下面这个错误。</p>

<p><img src="http://www.itwanger.com/assets/images/2019/10/mysql-emoji-2.png" alt="" /></p>

<p>因为数据库的字符编码一般是  utf8（支持的编码范围为 <code class="highlighter-rouge">\u0000-\uFFFF</code>），而 Emoji 所在的编码范围是 <code class="highlighter-rouge">\u1F601-\u1F64F</code>，超出 MySql 的边界了。</p>

<p>怎么解决这个问题呢？</p>

<h3 id="03utf8mb4">03、utf8mb4</h3>

<p>可以将 MySql 的字符集由 utf8 调整为 utf8mb4。utf8mb4 是 MySql 在 5.5.3 版本之后增加的一个编码方式，用来兼容四字节的 Unicode（包括 Emoji）。</p>

<p>理论上，utf8mb4 是 utf8 的超集，其中 mb4 是 <code class="highlighter-rouge">most bytes 4</code> 的意思，将字符集修改为“utf8mb4”，并不会对已有的 utf8 编码读取产生任何问题。</p>

<p>但通常这种方式并不是最优解，因为应用层还需要将 MySql 的连接方式作出以下调整：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>jdbcUrl = jdbc:mysql://localhost/jfinal_demo?characterEncoding=utf8mb4&amp;useSSL=false&amp;zeroDateTimeBehavior=convertToNull
</code></pre></div></div>

<p>由原来的 <code class="highlighter-rouge">characterEncoding=utf8</code> 调整为 <code class="highlighter-rouge">characterEncoding=utf8mb4</code>。</p>

<h3 id="04emojiconverter">04、EmojiConverter</h3>

<p>更友好的解决方式应该将 Emoji 当做字符串存储，然后在取出来的时候再转成 Emoji，这样可以兼容所有的数据库版本。</p>

<p>我在 GitHub 上找到了这样的一个库——EmojiConverter，它可以很方便地将 Emoji 转换为字符串的别名，同时也支持将这个别名转换为 Emoji。</p>

<p>1）在 pom.xml 文件中加入 EmojiConverter</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;dependency&gt;</span>
<span class="nt">&lt;groupId&gt;</span>com.github.binarywang<span class="nt">&lt;/groupId&gt;</span>
<span class="nt">&lt;artifactId&gt;</span>java-emoji-converter<span class="nt">&lt;/artifactId&gt;</span>
<span class="nt">&lt;version&gt;</span>0.1.1<span class="nt">&lt;/version&gt;</span>
<span class="nt">&lt;/dependency&gt;</span>
</code></pre></div></div>

<p>2）存储 Emoji 之前调用 <code class="highlighter-rouge">toHtml()</code> 方法转换一下</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">EmojiConverter</span> <span class="n">emojiConverter</span> <span class="o">=</span> <span class="nc">EmojiConverter</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>

<span class="nc">String</span> <span class="n">html</span> <span class="o">=</span> <span class="n">emojiConverter</span><span class="o">.</span><span class="na">toHtml</span><span class="o">(</span><span class="n">keywords</span><span class="o">.</span><span class="na">getContent</span><span class="o">().</span><span class="na">trim</span><span class="o">());</span>

<span class="c1">// JFinal 的保存方式</span>
<span class="nc">Record</span> <span class="n">record</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Record</span><span class="o">().</span><span class="na">set</span><span class="o">(</span><span class="s">"content"</span><span class="o">,</span> <span class="n">html</span><span class="o">)</span>
<span class="nc">Db</span><span class="o">.</span><span class="na">save</span><span class="o">(</span><span class="s">"keywords"</span><span class="o">,</span> <span class="n">record</span><span class="o">);</span>
</code></pre></div></div>

<p>比如说，要存储的内容当中包含了一个点赞的 Emoji。</p>

<p><img src="http://www.itwanger.com/assets/images/2019/10/mysql-emoji-3.png" alt="" /></p>

<p>那么通过 <code class="highlighter-rouge">emojiConverter.toHtml()</code> 转了之后的内容是什么样子呢？是一个码点：<code class="highlighter-rouge">&amp;#128077</code>，debug 的时候截图如下所示。</p>

<p><img src="http://www.itwanger.com/assets/images/2019/10/mysql-emoji-4.png" alt="" /></p>

<p>这样的话，MySql 保存的内容就是一个普通的字符串了，编码方式仍然可以是 utf8。</p>

<p>3）显示 Emoji 的时候调用 <code class="highlighter-rouge">toUnicode()</code> 方法格式化一下</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">String</span> <span class="n">unicode</span> <span class="o">=</span> <span class="n">emojiConverter</span><span class="o">.</span><span class="na">toUnicode</span><span class="o">(</span><span class="n">content</span><span class="o">);</span>
<span class="n">outMsg</span><span class="o">.</span><span class="na">setContent</span><span class="o">(</span><span class="n">unicode</span><span class="o">);</span>
</code></pre></div></div>

<p>格式化后的内容可以正常显示在微信公众号回复的文本消息中，截图如下所示。</p>

<p><img src="http://www.itwanger.com/assets/images/2019/10/mysql-emoji-5.png" alt="" /></p>

:ET